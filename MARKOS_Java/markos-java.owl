<?xml version="1.0"?>


<!DOCTYPE rdf:RDF [
    <!ENTITY owl "http://www.w3.org/2002/07/owl#" >
    <!ENTITY swrl "http://www.w3.org/2003/11/swrl#" >
    <!ENTITY owl2 "http://www.w3.org/2006/12/owl2#" >
    <!ENTITY swrlx "http://www.w3.org/2003/11/swrlx#" >
    <!ENTITY swrlb "http://www.w3.org/2003/11/swrlb#" >
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
    <!ENTITY msw "http://www.markosproject.eu/ontologies/software#" >
]>


<rdf:RDF xmlns="http://www.markosproject.eu/ontologies/java#"
     xml:base="http://www.markosproject.eu/ontologies/java"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:swrl="http://www.w3.org/2003/11/swrl#"
     xmlns:swrlx="http://www.w3.org/2003/11/swrlx#"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:swrlb="http://www.w3.org/2003/11/swrlb#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:owl2="http://www.w3.org/2006/12/owl2#"
     xmlns:msw="http://www.markosproject.eu/ontologies/software#">
    <owl:Ontology rdf:about="http://www.markosproject.eu/ontologies/java">
        <owl:versionIRI rdf:resource="http://www.markosproject.eu/ontologies/java#2014/03/11"/>
        <owl:imports rdf:resource="&msw;2014/03/11"/>
    </owl:Ontology>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.markosproject.eu/ontologies/java#distributedPackage -->

    <owl:ObjectProperty rdf:about="http://www.markosproject.eu/ontologies/java#distributedPackage">
        <rdfs:domain rdf:resource="http://www.markosproject.eu/ontologies/java#JavaArchiveFile"/>
        <rdfs:range rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPackage"/>
        <owl:inverseOf rdf:resource="http://www.markosproject.eu/ontologies/java#isDistributedBy"/>
        <rdfs:subPropertyOf rdf:resource="http://www.markosproject.eu/ontologies/top#containedEntity"/>
    </owl:ObjectProperty>
    


    <!-- http://www.markosproject.eu/ontologies/java#implementedInterface -->

    <owl:ObjectProperty rdf:about="http://www.markosproject.eu/ontologies/java#implementedInterface">
        <rdfs:range rdf:resource="http://www.markosproject.eu/ontologies/java#JavaInterface"/>
        <rdfs:domain rdf:resource="http://www.markosproject.eu/ontologies/java#JavaSoftwareClass"/>
        <rdfs:subPropertyOf rdf:resource="&msw;implementedSoftwareEntity"/>
    </owl:ObjectProperty>
    


    <!-- http://www.markosproject.eu/ontologies/java#isDistributedBy -->

    <owl:ObjectProperty rdf:about="http://www.markosproject.eu/ontologies/java#isDistributedBy">
        <rdfs:range rdf:resource="http://www.markosproject.eu/ontologies/java#JavaArchiveFile"/>
        <rdfs:domain rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPackage"/>
        <rdfs:subPropertyOf rdf:resource="&msw;manifestation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.markosproject.eu/ontologies/java#ownedObjectEntity -->

    <owl:ObjectProperty rdf:about="http://www.markosproject.eu/ontologies/java#ownedObjectEntity">
        <rdfs:domain rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPackage"/>
        <rdfs:subPropertyOf rdf:resource="http://www.markosproject.eu/ontologies/top#ownedMember"/>
        <rdfs:range>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaInterface"/>
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaSoftwareClass"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:range>
    </owl:ObjectProperty>
    


    <!-- http://www.markosproject.eu/ontologies/java#ownedPackage -->

    <owl:ObjectProperty rdf:about="http://www.markosproject.eu/ontologies/java#ownedPackage">
        <rdfs:domain rdf:resource="http://www.markosproject.eu/ontologies/java#JavaLibrary"/>
        <rdfs:range rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPackage"/>
        <rdfs:subPropertyOf rdf:resource="http://www.markosproject.eu/ontologies/top#containedEntity"/>
    </owl:ObjectProperty>
    


    <!-- http://www.markosproject.eu/ontologies/software#implementationLanguage -->

    <owl:ObjectProperty rdf:about="&msw;implementationLanguage"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#implementedSoftwareEntity -->

    <owl:ObjectProperty rdf:about="&msw;implementedSoftwareEntity"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#manifestation -->

    <owl:ObjectProperty rdf:about="&msw;manifestation"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#valueType -->

    <owl:ObjectProperty rdf:about="&msw;valueType"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#visibility -->

    <owl:ObjectProperty rdf:about="&msw;visibility"/>
    


    <!-- http://www.markosproject.eu/ontologies/top#containedEntity -->

    <owl:ObjectProperty rdf:about="http://www.markosproject.eu/ontologies/top#containedEntity"/>
    


    <!-- http://www.markosproject.eu/ontologies/top#ownedMember -->

    <owl:ObjectProperty rdf:about="http://www.markosproject.eu/ontologies/top#ownedMember"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Data properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.markosproject.eu/ontologies/java#isAbstract -->

    <owl:DatatypeProperty rdf:about="http://www.markosproject.eu/ontologies/java#isAbstract">
        <rdfs:label>Is abstract</rdfs:label>
        <rdfs:comment>used in a class definition to specify that a class is not to be instantiated, but rather inherited by other classes. An abstract class can have abstract methods that are not implemented in the abstract class, but in subclasses.

Also is using in method definition. An abstract method is a method that is declared without an implementation (without braces, and followed by a semicolon), like this: is a method that is declared without an implementation </rdfs:comment>
        <rdfs:domain rdf:resource="http://www.markosproject.eu/ontologies/java#JavaMethod"/>
        <rdfs:domain rdf:resource="http://www.markosproject.eu/ontologies/java#JavaSoftwareClass"/>
        <rdfs:range rdf:resource="&xsd;boolean"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.markosproject.eu/ontologies/java#isCore -->

    <owl:DatatypeProperty rdf:about="http://www.markosproject.eu/ontologies/java#isCore">
        <rdfs:label>To indicate if a class or interface is a standard member of the Java(TM) Platform.</rdfs:label>
        <rdfs:range rdf:resource="&xsd;boolean"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaAPI"/>
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaInterface"/>
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaLibrary"/>
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaPackage"/>
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaSoftwareClass"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.markosproject.eu/ontologies/java#ApplicationXMLSourceCodeFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#ApplicationXMLSourceCodeFile">
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#DeploymentDescriptorFile"/>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#DeploymentDescriptorFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#DeploymentDescriptorFile">
        <rdfs:subClassOf rdf:resource="&msw;NonCodeFile"/>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#EARArchiveFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#EARArchiveFile">
        <rdfs:label>EAR file</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaArchiveFile"/>
        <rdfs:comment>An EAR file is a standard JAR file (and therefore a Zip file) with a .ear extension, with one or more entries representing the modules of the application, and a metadata directory called META-INF which contains one or more deployment descriptors.</rdfs:comment>
        <rdfs:seeAlso>http://en.wikipedia.org/wiki/EAR_(file_format)</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#EJBArchiveFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#EJBArchiveFile">
        <rdfs:label>EJB file</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaArchiveFile"/>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#EjbJarXMLSourceCodeFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#EjbJarXMLSourceCodeFile">
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#DeploymentDescriptorFile"/>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JARArchiveFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JARArchiveFile">
        <rdfs:label>JAR file</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaArchiveFile"/>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaExecutableFile"/>
        <rdfs:comment>A JAR file is an archive file format typically used to aggregate many Java class files and associated metadata and resources (text, images and so on) into one file to distribute application software or libraries on the Java platform.

 It also supports file compression.  Is a platform-independent file format that aggregates many files into one</rdfs:comment>
        <rdfs:seeAlso>http://en.wikipedia.org/wiki/JAR_(file_format)</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaAPI -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaAPI">
        <rdfs:label>Java API</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;API"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;implementationLanguage"/>
                <owl:hasValue rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>Set of all public interfaces implemented in Java of a Java Package or a Java Library.

If two Packages or two Libraries contains the same public interfaces then they contains the same API.
</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaAccessModifier -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaAccessModifier">
        <rdfs:label>Java access modifiers</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;VisibilityKind"/>
        <rdfs:comment>Access level modifiers determine whether other classes can use a particular field or invoke a particular method</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaArchiveFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaArchiveFile">
        <rdfs:label>Java archive file</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;ArchiveFile"/>
        <rdfs:comment>A Java file  used for aggregating many Java files (and other standar) into one.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaArrayType -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaArrayType">
        <rdfs:label>Java array type</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaReferenceType"/>
        <rdfs:comment>An array is a container object that holds a fixed number of values of a single type. The length of an array is established when the array is created. After creation, its length is fixed.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaClassFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaClassFile">
        <rdfs:label>Java class file</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaObjectFile"/>
        <rdfs:comment>Java class file is a file (with the .class filename extension) containing a Java bytecode which can be executed on the Java Virtual Machine (JVM). Java class file is produced by Java compiler from Java programming language source files (.java files) containing Java classes. If a source file has more than one class, each class is compiled into a separate class file.</rdfs:comment>
        <rdfs:seeAlso>http://en.wikipedia.org/wiki/Java_class_file</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaComponentType -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaComponentType">
        <rdfs:subClassOf rdf:resource="&msw;Component"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;implementationLanguage"/>
                <owl:hasValue rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA"/>
            </owl:Restriction>
        </rdfs:subClassOf>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaConstructorMethod -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaConstructorMethod">
        <rdfs:subClassOf rdf:resource="&msw;ConstructorMethod"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;implementationLanguage"/>
                <owl:hasValue rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA"/>
            </owl:Restriction>
        </rdfs:subClassOf>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaExecutableFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaExecutableFile">
        <rdfs:subClassOf rdf:resource="&msw;ExecutableFile"/>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaField -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaField">
        <rdfs:label>Java field</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaMember"/>
        <rdfs:subClassOf rdf:resource="&msw;Attribute"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;implementationLanguage"/>
                <owl:hasValue rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;visibility"/>
                <owl:someValuesFrom rdf:resource="http://www.markosproject.eu/ontologies/java#JavaAccessModifier"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;valueType"/>
                <owl:someValuesFrom rdf:resource="http://www.markosproject.eu/ontologies/java#JavaType"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>A data member of a class

The Java fields store the state of an java object</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaFile">
        <rdfs:label>Java file</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaSourceFile"/>
        <rdfs:comment>Files that contain the .java file extension are program files that have been written in the Java programming language</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaInterface -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaInterface">
        <rdfs:label>Java interface</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaReferenceType"/>
        <rdfs:subClassOf rdf:resource="&msw;Interface"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;visibility"/>
                <owl:someValuesFrom rdf:resource="http://www.markosproject.eu/ontologies/java#JavaTopLevelModifier"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:seeAlso>http://en.wikipedia.org/wiki/Interface_(Java)</rdfs:seeAlso>
        <rdfs:comment>An interface in the Java programming language is an abstract type that is used to specify an interface (in the generic sense of the term) that classes must implement. Interfaces are declared using the interface keyword, and may only contain method signature and constant declarations (variable declarations that are declared to be both static and final). An interface may never contain method definitions.

Interfaces cannot be instantiated, but rather are implemented

A Java class may implement, and an interface may extend, any number of interfaces; however an interface may not implement an interface.</rdfs:comment>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/concepts/interface.html</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaLibrary -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaLibrary">
        <rdfs:label>Java library</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;Library"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;implementationLanguage"/>
                <owl:hasValue rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>A library is a software entity, manifested by a single JavaArchiveFile, that aggregates JAVA software entities manifested the files contained in the JavaArchiveFile.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaLocalVariable -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaLocalVariable">
        <rdfs:subClassOf rdf:resource="&msw;LocalVariable"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;valueType"/>
                <owl:someValuesFrom rdf:resource="http://www.markosproject.eu/ontologies/java#JavaType"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>Similar to how an object stores its state in fields, a method will often store its temporary state in local variables</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaMember -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaMember">
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/top#Entity"/>
        <rdfs:comment>A field or method of a class. It is an abstrac class.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaMemberModifier -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaMemberModifier">
        <rdfs:label>Java member modifier</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaAccessModifier"/>
        <rdfs:comment>At the member level of a class</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaMethod -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaMethod">
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaMember"/>
        <rdfs:subClassOf rdf:resource="&msw;Method"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;implementationLanguage"/>
                <owl:hasValue rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;visibility"/>
                <owl:someValuesFrom rdf:resource="http://www.markosproject.eu/ontologies/java#JavaAccessModifier"/>
            </owl:Restriction>
        </rdfs:subClassOf>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaObjectFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaObjectFile">
        <rdfs:label>Java object file</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;ObjectCodeFile"/>
        <rdfs:comment>An object file format is a computer file format used for the storage of java object code and related data.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaPackage -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaPackage">
        <rdfs:label>Java package</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;Package"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;implementationLanguage"/>
                <owl:hasValue rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>The set of all Java software entities contained in a same JavaSoftwareRelease and belonging to a same namespace. </rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaParameter -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaParameter">
        <rdfs:label>Java parameter</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;Parameter"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;valueType"/>
                <owl:someValuesFrom rdf:resource="http://www.markosproject.eu/ontologies/java#JavaType"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;implementationLanguage"/>
                <owl:hasValue rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>The variable to pass information to one Java method/operation</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaPrimitiveType -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaPrimitiveType">
        <rdfs:label>Java primitive type</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaType"/>
        <rdfs:subClassOf rdf:resource="&msw;PrimitiveType"/>
        <rdfs:comment>A primitive type is predefined by the language and is named by a reserved keyword. Primitive values do not share state with other primitive values. Java programming language support eight primitive data types</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaProgrammingLanguageVersion -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaProgrammingLanguageVersion">
        <rdfs:subClassOf rdf:resource="&msw;ProgrammingLanguageVersion"/>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaReferenceType -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaReferenceType">
        <rdfs:label>Java reference type</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaType"/>
        <rdfs:comment>A reference type is a data type that’s based on a class rather than on one of the primitive types that are built in to the Java language. The class can be a class that’s provided as part of the Java API class library or a class that a programamer can write himself.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaSoftwareClass -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaSoftwareClass">
        <rdfs:label>Java software class</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaReferenceType"/>
        <rdfs:subClassOf rdf:resource="&msw;SoftwareClass"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;visibility"/>
                <owl:someValuesFrom rdf:resource="http://www.markosproject.eu/ontologies/java#JavaTopLevelModifier"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/javaOO/classes.html</rdfs:seeAlso>
        <rdfs:comment>A Java class can be defined as a template/ blue print that describe the behaviors/states that java object of its type support

A Java class is a tyoe of Software Class whose features are fields and methods (An entity is some unit of data that can be classified and have stated relationships to other entities)</rdfs:comment>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/concepts/class.html</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaSourceFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaSourceFile">
        <rdfs:label>Java source file</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;SourceFile"/>
        <rdfs:comment>A Java source code file is a file contain instructions (possibly with comments) written Java programing language</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaTopLevelModifier -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaTopLevelModifier">
        <rdfs:label>Java top level modifier</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaAccessModifier"/>
        <rdfs:comment>At the top level</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaType -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaType">
        <rdfs:label>Java type</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;Type"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;implementationLanguage"/>
                <owl:hasValue rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>A Java type determines the types of values of the Java variables.

All variables must have a type. You can use primitive types such as int, float, boolean, etc. Or you can use reference types, such as strings, arrays, or objects.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaTypeVariableType -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaTypeVariableType">
        <rdfs:label>Java type variable type</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaReferenceType"/>
        <rdfs:comment>A type variable is an unqualified identifier used as a type in class, interface, method, and constructor bodies.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JspFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JspFile">
        <rdfs:label>Jsp file</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaSourceFile"/>
        <rdfs:comment>JSP is a file extension for Java Server Pages file format.  A JSP is an HTML page containing a reference to Java servlets, or,  java server side applets. In orther words, html with java code.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#PersistenceXMLSourceCodeFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#PersistenceXMLSourceCodeFile">
        <rdfs:subClassOf rdf:resource="&msw;ConfigurationFile"/>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#WARArchiveFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#WARArchiveFile">
        <rdfs:label>WAR file</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JARArchiveFile"/>
        <rdfs:comment>a WAR file is a JAR file used to distribute a collection of Java files and other resources that together constitute a Web application</rdfs:comment>
        <rdfs:seeAlso>http://en.wikipedia.org/wiki/WAR_file_format_(Sun)</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#WebXMLSourceCodeFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#WebXMLSourceCodeFile">
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#DeploymentDescriptorFile"/>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/software#API -->

    <owl:Class rdf:about="&msw;API"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#ArchiveFile -->

    <owl:Class rdf:about="&msw;ArchiveFile"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#Attribute -->

    <owl:Class rdf:about="&msw;Attribute"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#Component -->

    <owl:Class rdf:about="&msw;Component"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#ConfigurationFile -->

    <owl:Class rdf:about="&msw;ConfigurationFile"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#ConstructorMethod -->

    <owl:Class rdf:about="&msw;ConstructorMethod"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#ExceptionType -->

    <owl:Class rdf:about="&msw;ExceptionType"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#ExecutableFile -->

    <owl:Class rdf:about="&msw;ExecutableFile"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#Interface -->

    <owl:Class rdf:about="&msw;Interface"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#Library -->

    <owl:Class rdf:about="&msw;Library"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#LocalVariable -->

    <owl:Class rdf:about="&msw;LocalVariable"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#Method -->

    <owl:Class rdf:about="&msw;Method"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#NonCodeFile -->

    <owl:Class rdf:about="&msw;NonCodeFile"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#ObjectCodeFile -->

    <owl:Class rdf:about="&msw;ObjectCodeFile"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#Package -->

    <owl:Class rdf:about="&msw;Package"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#Parameter -->

    <owl:Class rdf:about="&msw;Parameter"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#PrimitiveType -->

    <owl:Class rdf:about="&msw;PrimitiveType"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#ProgrammingLanguageVersion -->

    <owl:Class rdf:about="&msw;ProgrammingLanguageVersion"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#SoftwareClass -->

    <owl:Class rdf:about="&msw;SoftwareClass"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#SourceCodeFile -->

    <owl:Class rdf:about="&msw;SourceCodeFile"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#SourceFile -->

    <owl:Class rdf:about="&msw;SourceFile"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#Type -->

    <rdf:Description rdf:about="&msw;Type">
        <rdfs:comment>it doesn&apos;t make sense to model values (or objects) themselves. We need just the types of the possible values (in other words, classes of these objects)</rdfs:comment>
    </rdf:Description>
    


    <!-- http://www.markosproject.eu/ontologies/software#VisibilityKind -->

    <owl:Class rdf:about="&msw;VisibilityKind"/>
    


    <!-- http://www.markosproject.eu/ontologies/top#Entity -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/top#Entity"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Individuals
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA"/>
    


    <!-- http://www.markosproject.eu/ontologies/java#Java_Database_Connectivity -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#Java_Database_Connectivity">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaLibrary"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#Nines -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#Nines">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaSoftwareClass"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#boolean -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#boolean">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPrimitiveType"/>
        <rdfs:label>boolean</rdfs:label>
        <rdfs:comment>The boolean data type has only two possible values: true and false. Use this data type for simple flags that track true/false conditions. This data type represents one bit of information, but its &quot;size&quot; isn&apos;t something that&apos;s precisely defined.</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#byte -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#byte">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPrimitiveType"/>
        <rdfs:label>byte</rdfs:label>
        <rdfs:comment>The byte data type is an 8-bit signed two&apos;s complement integer. It has a minimum value of -128 and a maximum value of 127 (inclusive). The byte data type can be useful for saving memory in large arrays, where the memory savings actually matters. They can also be used in place of int where their limits help to clarify your code; the fact that a variable&apos;s range is limited can serve as a form of documentation</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#char -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#char">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPrimitiveType"/>
        <rdfs:label>char</rdfs:label>
        <rdfs:comment>The char data type is a single 16-bit Unicode character. It has a minimum value of &apos;\u0000&apos; (or 0) and a maximum value of &apos;\uffff&apos; (or 65,535 inclusive).</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#double -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#double">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPrimitiveType"/>
        <rdfs:label>double</rdfs:label>
        <rdfs:comment>The double data type is a double-precision 64-bit IEEE 754 floating point. Its range of values is beyond the scope of this discussion, but is specified in the Floating-Point Types, Formats, and Values section of the Java Language Specification. For decimal values, this data type is generally the default choice. As mentioned above, this data type should never be used for precise values, such as currency</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#float -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#float">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPrimitiveType"/>
        <rdfs:label>float</rdfs:label>
        <rdfs:comment>The float data type is a single-precision 32-bit IEEE 754 floating point. Its range of values is beyond the scope of this discussion, but is specified in the Floating-Point Types, Formats, and Values section of the Java Language Specification. As with the recommendations for byte and short, use a float (instead of double) if you need to save memory in large arrays of floating point numbers. This data type should never be used for precise values, such as currency. For that, you will need to use the java.math.BigDecimal class instead. Numbers and Strings covers BigDecimal and other useful classes provided by the Java platform.</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#int -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#int">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPrimitiveType"/>
        <rdfs:label>int</rdfs:label>
        <rdfs:comment>The int data type is a 32-bit signed two&apos;s complement integer. It has a minimum value of -2,147,483,648 and a maximum value of 2,147,483,647 (inclusive). For integral values, this data type is generally the default choice unless there is a reason (like the above) to choose something else. This data type will most likely be large enough for the numbers your program will use, but if you need a wider range of values, use long instead.</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#long -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#long">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPrimitiveType"/>
        <rdfs:label>long</rdfs:label>
        <rdfs:comment>The long data type is a 64-bit signed two&apos;s complement integer. It has a minimum value of -9,223,372,036,854,775,808 and a maximum value of 9,223,372,036,854,775,807 (inclusive). Use this data type when you need a range of values wider than those provided by int.</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#short -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#short">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPrimitiveType"/>
        <rdfs:label>short</rdfs:label>
        <rdfs:comment>The short data type is a 16-bit signed two&apos;s complement integer. It has a minimum value of -32,768 and a maximum value of 32,767 (inclusive). As with byte, the same guidelines apply: you can use a short to save memory in large arrays, in situations where the memory savings actually matters.</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/software#PACKAGE_VISIBILITY -->

    <owl:NamedIndividual rdf:about="&msw;PACKAGE_VISIBILITY">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaTopLevelModifier"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/software#PRIVATE_VISIBILITY -->

    <owl:NamedIndividual rdf:about="&msw;PRIVATE_VISIBILITY">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaMemberModifier"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/software#PROTECTED_VISIBILITY -->

    <owl:NamedIndividual rdf:about="&msw;PROTECTED_VISIBILITY">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaMemberModifier"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/software#PUBLIC_VISIBILITY -->

    <owl:NamedIndividual rdf:about="&msw;PUBLIC_VISIBILITY">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaTopLevelModifier"/>
    </owl:NamedIndividual>
</rdf:RDF>



<!-- Generated by the OWL API (version 3.4.2) http://owlapi.sourceforge.net -->

