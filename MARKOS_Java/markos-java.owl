<?xml version="1.0"?>


<!DOCTYPE rdf:RDF [
    <!ENTITY owl "http://www.w3.org/2002/07/owl#" >
    <!ENTITY swrl "http://www.w3.org/2003/11/swrl#" >
    <!ENTITY owl2 "http://www.w3.org/2006/12/owl2#" >
    <!ENTITY swrlx "http://www.w3.org/2003/11/swrlx#" >
    <!ENTITY swrlb "http://www.w3.org/2003/11/swrlb#" >
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
    <!ENTITY mtop "http://www.markosproject.eu/ontologies/top#" >
    <!ENTITY msw "http://www.markosproject.eu/ontologies/software#" >
]>


<rdf:RDF xmlns="http://www.markosproject.eu/ontologies/java#"
     xml:base="http://www.markosproject.eu/ontologies/java"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:swrl="http://www.w3.org/2003/11/swrl#"
     xmlns:swrlx="http://www.w3.org/2003/11/swrlx#"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:swrlb="http://www.w3.org/2003/11/swrlb#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:owl2="http://www.w3.org/2006/12/owl2#"
     xmlns:msw="http://www.markosproject.eu/ontologies/software#"
     xmlns:mtop="http://www.markosproject.eu/ontologies/top#">
    <owl:Ontology rdf:about="http://www.markosproject.eu/ontologies/java">
        <rdfs:comment>This ontology describes the Java programing language concepts used by the MARKOS service. Find more details at the MARKOS website (http://www.markosproject.eu/).

Goals: 
â€œwhat a user is expected to finnd after completion of a searching process&quot;.

The ontological model has been introduced for 
representing Java software entities structure and classification.</rdfs:comment>
        <owl:imports rdf:resource="http://www.markosproject.eu/ontologies/software"/>
        <owl:versionIRI rdf:resource="http://www.markosproject.eu/ontologies/java#2014/05/05"/>
    </owl:Ontology>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Annotation properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.markosproject.eu/ontologies/java#relatedTo -->

    <owl:AnnotationProperty rdf:about="http://www.markosproject.eu/ontologies/java#relatedTo"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.markosproject.eu/ontologies/java#applyAnnotation -->

    <owl:ObjectProperty rdf:about="http://www.markosproject.eu/ontologies/java#applyAnnotation">
        <rdfs:label>Apply annotation</rdfs:label>
        <relatedTo>Java Annotation</relatedTo>
        <rdfs:subPropertyOf rdf:resource="&msw;usedSoftwareEntity"/>
        <rdfs:range>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaInterface"/>
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaMember"/>
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaSoftwareClass"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:range>
    </owl:ObjectProperty>
    


    <!-- http://www.markosproject.eu/ontologies/java#distributedPackage -->

    <owl:ObjectProperty rdf:about="http://www.markosproject.eu/ontologies/java#distributedPackage">
        <rdfs:domain rdf:resource="http://www.markosproject.eu/ontologies/java#JavaArchiveFile"/>
        <rdfs:range rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPackage"/>
        <rdfs:subPropertyOf rdf:resource="&mtop;containedEntity"/>
    </owl:ObjectProperty>
    


    <!-- http://www.markosproject.eu/ontologies/java#instanciateGenericType -->

    <owl:ObjectProperty rdf:about="http://www.markosproject.eu/ontologies/java#instanciateGenericType">
        <rdfs:label>Instanciate generic type</rdfs:label>
        <relatedTo>Java Generic</relatedTo>
        <rdfs:domain rdf:resource="http://www.markosproject.eu/ontologies/java#JavaParameterizedType"/>
        <rdfs:subPropertyOf rdf:resource="&msw;usedSoftwareEntity"/>
        <rdfs:range>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaGenericClass"/>
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaGenericInterface"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:range>
    </owl:ObjectProperty>
    


    <!-- http://www.markosproject.eu/ontologies/java#ownedAnnotationTypeElement -->

    <owl:ObjectProperty rdf:about="http://www.markosproject.eu/ontologies/java#ownedAnnotationTypeElement">
        <relatedTo>Java Annotation</relatedTo>
        <rdfs:comment>The annotation definition contains annotation type element declarations</rdfs:comment>
        <rdfs:domain rdf:resource="http://www.markosproject.eu/ontologies/java#JavaAnnotationType"/>
        <rdfs:range rdf:resource="http://www.markosproject.eu/ontologies/java#JavaAnnotationTypeElement"/>
        <rdfs:subPropertyOf rdf:resource="&mtop;subordinateEntity"/>
    </owl:ObjectProperty>
    


    <!-- http://www.markosproject.eu/ontologies/java#ownedTypeArgument -->

    <owl:ObjectProperty rdf:about="http://www.markosproject.eu/ontologies/java#ownedTypeArgument">
        <rdfs:label>Owned Type Argument</rdfs:label>
        <mtop:correspondingSuperProperty>One provides type arguments in order to create a parameterized type.</mtop:correspondingSuperProperty>
        <relatedTo>Java Generic</relatedTo>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/generics/types.html</rdfs:seeAlso>
        <rdfs:domain rdf:resource="http://www.markosproject.eu/ontologies/java#JavaParameterizedType"/>
        <rdfs:range rdf:resource="http://www.markosproject.eu/ontologies/java#JavaReferenceType"/>
        <rdfs:subPropertyOf rdf:resource="&mtop;subordinateEntity"/>
    </owl:ObjectProperty>
    


    <!-- http://www.markosproject.eu/ontologies/java#ownedTypeParameter -->

    <owl:ObjectProperty rdf:about="http://www.markosproject.eu/ontologies/java#ownedTypeParameter">
        <rdfs:label>Owned Type Parameter</rdfs:label>
        <relatedTo>Java Generic</relatedTo>
        <rdfs:comment>One provides type parameter in order to create a generic class or interfaces.</rdfs:comment>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/generics/types.html</rdfs:seeAlso>
        <rdfs:range rdf:resource="http://www.markosproject.eu/ontologies/java#JavaTypeParameter"/>
        <rdfs:subPropertyOf rdf:resource="&mtop;subordinateEntity"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaGenericClass"/>
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaGenericInterface"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:ObjectProperty>
    


    <!-- http://www.markosproject.eu/ontologies/software#visibility -->

    <owl:ObjectProperty rdf:about="&msw;visibility"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Data properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.markosproject.eu/ontologies/java#isCore -->

    <owl:DatatypeProperty rdf:about="http://www.markosproject.eu/ontologies/java#isCore">
        <rdfs:label>is core</rdfs:label>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/information/glossary.html (core class, core package)</rdfs:seeAlso>
        <rdfs:comment>To indicate if a class or interface is a standard member of the Java(TM) Platform.</rdfs:comment>
        <rdfs:range rdf:resource="&xsd;boolean"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaAPI"/>
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaInterface"/>
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaLibrary"/>
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaPackage"/>
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaSoftwareClass"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.markosproject.eu/ontologies/java#isFinal -->

    <owl:DatatypeProperty rdf:about="http://www.markosproject.eu/ontologies/java#isFinal">
        <rdfs:label>is final</rdfs:label>
        <rdfs:comment>FInal is used to define entities which cannot later be changed. The final modifier indicates that the value of this field cannot change.

When applied to a class, the class can not be extended. When applied to a method, the method can not be overwritten.When applied to a variable, the variable can not change.</rdfs:comment>
        <rdfs:range rdf:resource="&xsd;boolean"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaSoftwareClass"/>
                    <rdf:Description rdf:about="&msw;Feature"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.markosproject.eu/ontologies/java#isStrictfp -->

    <owl:DatatypeProperty rdf:about="http://www.markosproject.eu/ontologies/java#isStrictfp">
        <rdfs:label>is strictfp</rdfs:label>
        <rdfs:seeAlso>http://en.wikipedia.org/wiki/Strictfp</rdfs:seeAlso>
        <rdfs:comment>It is a property to restrict floating-point calculations to ensure portability.

It can be used on classes, interfaces and non-abstract methods. When applied to a method, it causes all calculations inside the method to use strict floating-point math. When applied to a class, all calculations inside the class use strict floating-point math.</rdfs:comment>
        <rdfs:range rdf:resource="&xsd;boolean"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaInterface"/>
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaNonAbstracMethod"/>
                    <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaSoftwareClass"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.markosproject.eu/ontologies/java#isTransient -->

    <owl:DatatypeProperty rdf:about="http://www.markosproject.eu/ontologies/java#isTransient">
        <rdfs:label>is transient</rdfs:label>
        <rdfs:comment>It marks a member variable not to be serialized when it is persisted to streams of bytes. When an object is transferred through the network, the object needs to be &apos;serialized&apos;. Serialization converts the object state to serial bytes. Those bytes are sent over the network and the object is recreated from those bytes. Member variables marked by the java transient keyword are not transferred, they are lost intentionally.</rdfs:comment>
        <rdfs:domain rdf:resource="http://www.markosproject.eu/ontologies/java#JavaField"/>
        <rdfs:range rdf:resource="&xsd;boolean"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.markosproject.eu/ontologies/java#isVolatile -->

    <owl:DatatypeProperty rdf:about="http://www.markosproject.eu/ontologies/java#isVolatile">
        <rdfs:label>is volatile</rdfs:label>
        <rdfs:comment>It changes the runtime behavior in a way that is noticeable when multiple threads access these variable</rdfs:comment>
        <rdfs:domain rdf:resource="http://www.markosproject.eu/ontologies/java#JavaField"/>
        <rdfs:range rdf:resource="&xsd;boolean"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.markosproject.eu/ontologies/java#preferredName -->

    <owl:DatatypeProperty rdf:about="http://www.markosproject.eu/ontologies/java#preferredName">
        <rdfs:domain rdf:resource="&mtop;NamedEntity"/>
        <rdfs:subPropertyOf rdf:resource="&mtop;name"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.markosproject.eu/ontologies/software#isStatic -->

    <rdf:Description rdf:about="&msw;isStatic">
        <rdfs:comment>Static attribute, variables that are common to all objects. They are associated with the class, rather than with any object. Every instance of the class shares a class variable, which is in one fixed location in memory. Any object can change the value of a class variable, but class variables can also be manipulated without creating an instance of the class

Static methods, which have the static modifier in their declarations, should be invoked with the class name, without the need for creating an instance of the class</rdfs:comment>
    </rdf:Description>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.markosproject.eu/ontologies/java#ApplicationXMLSourceCodeFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#ApplicationXMLSourceCodeFile">
        <rdfs:label>Application XML descriptor file </rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaDeploymentDescriptorFile"/>
        <rdfs:comment>For Java EE applications, the deployment descriptor must be named application.xml and must be placed directly in the META-INF directory at the top level of the application .ear file</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#BuildAutomationTool -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#BuildAutomationTool">
        <rdfs:label>Build automation tool</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaDevelopmentTool"/>
        <rdfs:seeAlso>http://en.wikipedia.org/wiki/List_of_build_automation_software</rdfs:seeAlso>
        <rdfs:comment>Programs in charge of scripting or automating a wide variety of tasks that software developers do in their day-to-day activities including things like: compiling, packagin, running test, deployment to production systems, creating documentation and/or release notes</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#ConsoleApplication -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#ConsoleApplication">
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#Stand-AloneApplication"/>
        <rdfs:comment>Non-visual console application</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#ContinuousIntegrationTool -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#ContinuousIntegrationTool">
        <rdfs:label>Continuous integration tool</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#BuildAutomationTool"/>
        <rdfs:comment>Continuous integration (CI) is the practice, in software engineering, of merging all developer working copies with a shared mainline several times a day. It was first named and proposed as part of extreme programming (XP). Its main aim is to prevent integration problems, referred to as &quot;integration hell&quot; in early descriptions of XP. </rdfs:comment>
        <rdfs:seeAlso>http://en.wikipedia.org/wiki/Continuous_integration</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#EARArchiveFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#EARArchiveFile">
        <rdfs:label>EAR file</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaArchiveFile"/>
        <rdfs:comment>An EAR file is a standard JAR file (and therefore a Zip file) with a .ear extension, with one or more entries representing the modules of the application, and a metadata directory called META-INF which contains one or more deployment descriptors.</rdfs:comment>
        <rdfs:seeAlso>http://en.wikipedia.org/wiki/EAR_(file_format)</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#EJBArchiveFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#EJBArchiveFile">
        <rdfs:label>EJB file</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaArchiveFile"/>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#EjbJarXMLSourceCodeFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#EjbJarXMLSourceCodeFile">
        <rdfs:label>EJB XML descriptor file</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaDeploymentDescriptorFile"/>
        <rdfs:comment>EJB deployment descriptor, as defined in the Enterprise JavaBeans Specification</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#GUI -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#GUI">
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#Stand-AloneApplication"/>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#IDETool -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#IDETool">
        <rdfs:label>IDE tool</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaDevelopmentTool"/>
        <rdfs:seeAlso>http://www.infoworld.com/d/developer-world/infoworld-review-top-java-programming-tools-191</rdfs:seeAlso>
        <rdfs:seeAlso>http://en.wikipedia.org/wiki/Category:Java_development_tools</rdfs:seeAlso>
        <rdfs:seeAlso>http://en.wikipedia.org/wiki/Comparison_of_integrated_development_environments</rdfs:seeAlso>
        <rdfs:seeAlso>http://stackoverflow.com/questions/2625398/critical-tools-that-every-java-developer-should-have-in-his-toolbelt</rdfs:seeAlso>
        <rdfs:comment>Programs to develop Java application</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#InformationTechnology -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#InformationTechnology">
        <rdfs:label>Information technology</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#Technology"/>
        <rdfs:comment>The technology involving the development, maintenance, and use of computer systems, software, and networks for the processing and distribution of data</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JARArchiveFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JARArchiveFile">
        <rdfs:label>JAR file</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaArchiveFile"/>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaExecutableFile"/>
        <rdfs:comment>A JAR file is an archive file format typically used to aggregate many Java class files and associated metadata and resources (text, images and so on) into one file to distribute application software or libraries on the Java platform.

 It also supports file compression.  Is a platform-independent file format that aggregates many files into one</rdfs:comment>
        <rdfs:seeAlso>http://en.wikipedia.org/wiki/JAR_(file_format)</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaAPI -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaAPI">
        <rdfs:label>Java API</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;API"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;implementationLanguage"/>
                <owl:hasValue rdf:resource="&msw;JAVA"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>Set of all public interfaces implemented in Java of a Java Package or a Java Library.

If two Packages or two Libraries contains the same public interfaces then they contains the same API.
</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaAccessModifier -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaAccessModifier">
        <rdfs:label>Java access modifiers</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;VisibilityKind"/>
        <rdfs:comment>Access level modifiers determine whether other classes can use a particular field or invoke a particular method</rdfs:comment>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/javaOO/accesscontrol.html</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaAnnotation -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaAnnotation">
        <rdfs:label>Java annotation</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;TypedEntity"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;valueType"/>
                <owl:someValuesFrom rdf:resource="http://www.markosproject.eu/ontologies/java#JavaAnnotationType"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>Annotations, a form of metadata, provide data about a program that is not part of the program itself. Annotations have no direct effect on the operation of the code they annotate.</rdfs:comment>
        <rdfs:comment>They take the name of its annotation type name.</rdfs:comment>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/annotations/index.html</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaAnnotationType -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaAnnotationType">
        <rdfs:label>Java annotation type</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaType"/>
        <rdfs:subClassOf rdf:resource="&msw;AnnotationType"/>
        <rdfs:comment>An Java annotation type is a type of data associated to a java software entity. The annotation type definition looks similar to an interface definition where the keyword interface is preceded by the at sign (@) (@ = AT, as in annotation type).</rdfs:comment>
        <relatedTo>Java Anootation</relatedTo>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaAnnotationTypeElement -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaAnnotationTypeElement">
        <rdfs:label>Java annotation type element</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;SoftwareEntity"/>
        <relatedTo>Java Annotation</relatedTo>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/annotations/declaring.html</rdfs:seeAlso>
        <rdfs:comment>The annotation type contains annotation type element declarations, which look a lot like methods. Note that they can define optional default values.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaAnonymousClass -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaAnonymousClass">
        <rdfs:label>Java anonymous class</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaExpresion"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;visibility"/>
                <owl:someValuesFrom rdf:resource="http://www.markosproject.eu/ontologies/java#JavaTopLevelModifier"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/javaOO/anonymousclasses.html</rdfs:seeAlso>
        <rdfs:comment>They enable you to declare and instantiate a class at the same time. They are like local classes except that they do not have a name. Use them if you need to use a local class only once.

Anonymous classes are expressions, which means that you define the class in another expression</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaArchiveFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaArchiveFile">
        <rdfs:label>Java archive file</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;ArchiveFile"/>
        <rdfs:comment>A Java file  used for aggregating many Java files (and other standar) into one.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaArrayType -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaArrayType">
        <rdfs:label>Java array type</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaReferenceType"/>
        <rdfs:comment>An array is a container object that holds a fixed number of values of a single type. The length of an array is established when the array is created. After creation, its length is fixed.
Each item in an array is called an element, and each element is accessed by its numerical index.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaCheckedException -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaCheckedException">
        <rdfs:label>Java checked exception</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaExceptionType"/>
        <rdfs:comment>Represent invalid conditions in areas outside the immediate control of the program (invalid user input, database problems, network outages, absent files</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaClassFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaClassFile">
        <rdfs:label>Java class file</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaExecutableFile"/>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaObjectFile"/>
        <rdfs:comment>Java class file is a file (with the .class filename extension) containing a Java bytecode which can be executed on the Java Virtual Machine (JVM). Java class file is produced by Java compiler from Java programming language source files (.java files) containing Java classes. If a source file has more than one class, each class is compiled into a separate class file.</rdfs:comment>
        <rdfs:seeAlso>http://en.wikipedia.org/wiki/Java_class_file</rdfs:seeAlso>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/package/managingfiles.html</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaClassMethod -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaClassMethod">
        <rdfs:label>Java class method</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaMethod"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;isStatic"/>
                <owl:hasValue rdf:datatype="&xsd;boolean">true</owl:hasValue>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>The Java programming language supports static methods as well as static variables. Static methods, which have the static modifier in their declarations, should be invoked with the class name, without the need for creating an instance of the class.</rdfs:comment>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/javaOO/classvars.html</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaClassVariable -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaClassVariable">
        <rdfs:label>Java class variable</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaField"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;isStatic"/>
                <owl:hasValue rdf:datatype="&xsd;boolean">true</owl:hasValue>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>Fields that have the static modifier in their declaration are called static fields or class variables. They are associated with the class, rather than with any object. Every instance of the class shares a class variable, which is in one fixed location in memory. Any object can change the value of a class variable, but class variables can also be manipulated without creating an instance of the class.</rdfs:comment>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/javaOO/classvars.html</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaConfigurationFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaConfigurationFile">
        <rdfs:label>Java configuration file</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;ConfigurationFile"/>
        <rdfs:comment>It is a file that configures the initial settings for some JAVA applications</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaConstant -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaConstant">
        <rdfs:label>Java constant</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaClassVariable"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="http://www.markosproject.eu/ontologies/java#isFinal"/>
                <owl:hasValue rdf:datatype="&xsd;boolean">true</owl:hasValue>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>Java fields whose values never change.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaDeploymentDescriptorFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaDeploymentDescriptorFile">
        <rdfs:label>Java deployment descriptor</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaConfigurationFile"/>
        <rdfs:comment>A JAVA deployment descriptor (DD) refers to a configuration file for an JAVA artifact that is deployed to some container/engine.

Storing deployment configuration properties </rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaDevelopmentTool -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaDevelopmentTool">
        <rdfs:label>Java development tool</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaProgram"/>
        <rdfs:comment>A Java development tools is a programming tool for the Java programming language. A programming tool or software development tool is a program or application that software developers use to create, debug, maintain, or otherwise support other programs and applications. </rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaDistributedApplication -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaDistributedApplication">
        <rdfs:label>Java distributed application</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaProgram"/>
        <rdfs:comment>Distributed computing programs are used to build distributed systems. A distributed system is a software system in which components located on networked computers communicate and coordinate their actions by passing messages. The components interact with each other in order to achieve a common goal.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaDistributedMultitieredApplication -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaDistributedMultitieredApplication">
        <rdfs:label>Java distributed multitiered application</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaDistributedApplication"/>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaTieredApplication"/>
        <rdfs:seeAlso>http://docs.oracle.com/javaee/5/tutorial/doc/bnaay.html#bnabj</rdfs:seeAlso>
        <rdfs:comment>The Java EE platform uses a distributed multitiered application model for enterprise applications. Application logic is divided into components according to function, and the various application components that make up a Java EE application are installed on different machines depending on the tier in the multitiered Java EE environment to which the application component belongs.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaEnumType -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaEnumType">
        <rdfs:label>Java enum type</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaReferenceType"/>
        <rdfs:subClassOf rdf:resource="&msw;Enumeration"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;directImplementedInterface"/>
                <owl:allValuesFrom rdf:resource="http://www.markosproject.eu/ontologies/java#JavaInterface"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>An enum type is a special data type that enables for a variable to be a set of predefined constants. The variable must be equal to one of the values that have been predefined for it. Common examples include compass directions (values of NORTH, SOUTH, EAST, and WEST) and the days of the week.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaError -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaError">
        <rdfs:label>Java error</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaUncheckedException"/>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaExceptionType -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaExceptionType">
        <rdfs:label>Java exception type</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;ExceptionType"/>
        <rdfs:comment>A java exception is an event, which occurs during the execution of a program, that disrupts the normal flow of the program&apos;s instructions.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaExecutableFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaExecutableFile">
        <rdfs:label>Java executable file</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;ExecutableFile"/>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaExpresion -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaExpresion">
        <rdfs:label>Java expresion</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaStatement"/>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/nutsandbolts/expressions.html</rdfs:seeAlso>
        <rdfs:comment>Its natural place would be as parto of Software Entity, but as they do not usually have name, they can not be subclass of NamedEntity. </rdfs:comment>
        <rdfs:comment>An expression is a construct made up of variables, operators, and method invocations, which are constructed according to the syntax of the language, that evaluates to a single value.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaField -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaField">
        <rdfs:label>Java field</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaMember"/>
        <rdfs:subClassOf rdf:resource="&msw;Attribute"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;implementationLanguage"/>
                <owl:hasValue rdf:resource="&msw;JAVA"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;valueType"/>
                <owl:someValuesFrom rdf:resource="http://www.markosproject.eu/ontologies/java#JavaType"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/javaOO/variables.html</rdfs:seeAlso>
        <rdfs:comment>A data member of a class

The Java fields store the state of an java object</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaFile">
        <rdfs:label>Java file</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaSourceFile"/>
        <rdfs:comment>Files that contain the .java file extension are program files that have been written in the Java programming language</rdfs:comment>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/package/managingfiles.html</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaFloatingPointType -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaFloatingPointType">
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaNumericType"/>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaFunctionalInterface -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaFunctionalInterface">
        <rdfs:label>Java functional interface</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaInterface"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&mtop;nestedClassifier"/>
                <owl:onClass rdf:resource="http://www.markosproject.eu/ontologies/java#JavaMethod"/>
                <owl:qualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:qualifiedCardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:seeAlso>http://docs.oracle.com/javase/8/docs/api/java/lang/FunctionalInterface.html</rdfs:seeAlso>
        <rdfs:comment> A functional interface is a interface that contains only one abstract method.</rdfs:comment>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html#approach6</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaGenericClass -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaGenericClass">
        <rdfs:label>Java generic class</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaSoftwareClass"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="http://www.markosproject.eu/ontologies/java#ownedTypeParameter"/>
                <owl:onClass rdf:resource="http://www.markosproject.eu/ontologies/java#JavaTypeParameter"/>
                <owl:minQualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:minQualifiedCardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>Is a generic class that is parameterized over types. Here Java Generic act as a abstrac class, there will not be individual just belowing to this class, always will belong to parameterized when acts as a type of any typed entity.</rdfs:comment>
        <relatedTo>Java Generic</relatedTo>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/generics/types.html</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaGenericInterface -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaGenericInterface">
        <rdfs:label>Java generic interface</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaInterface"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="http://www.markosproject.eu/ontologies/java#ownedTypeParameter"/>
                <owl:onClass rdf:resource="http://www.markosproject.eu/ontologies/java#JavaTypeParameter"/>
                <owl:minQualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:minQualifiedCardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/generics/types.html</rdfs:seeAlso>
        <rdfs:comment>Is a generic interface that is parameterized over types.</rdfs:comment>
        <relatedTo>Java Generic</relatedTo>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaGenericMethod -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaGenericMethod">
        <rdfs:label>Java generic methods</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaMethod"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="http://www.markosproject.eu/ontologies/java#ownedTypeParameter"/>
                <owl:onClass rdf:resource="http://www.markosproject.eu/ontologies/java#JavaTypeParameter"/>
                <owl:minQualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:minQualifiedCardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/generics/methods.html</rdfs:seeAlso>
        <rdfs:comment>Generic methods are methods that introduce their own type parameters. This is similar to declaring a generic type, but the type parameter&apos;s scope is limited to the method where it is declared. Static and non-static generic methods are allowed, as well as generic class constructors.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaIOException -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaIOException">
        <rdfs:label>Java IO exception</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaCheckedException"/>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaImplementingClass -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaImplementingClass">
        <rdfs:label>Java implementing class</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaSoftwareClass"/>
        <rdfs:comment>A class that implements an interface</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaInnerClass -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaInnerClass">
        <rdfs:label>Java Inner Class</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaNestedClass"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;isStatic"/>
                <owl:hasValue rdf:datatype="&xsd;boolean">false</owl:hasValue>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;visibility"/>
                <owl:someValuesFrom rdf:resource="&msw;VisibilityKind"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/javaOO/innerclasses.html</rdfs:seeAlso>
        <rdfs:comment>They are non-static nested classes. An inner class is associated with an instance of its enclosing class and has direct access to that object&apos;s methods and fields. </rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaInstanceMethod -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaInstanceMethod">
        <rdfs:label>Java instance method</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaMethod"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;isStatic"/>
                <owl:hasValue rdf:datatype="&xsd;boolean">false</owl:hasValue>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>They are associated with objects and is needed creating an instance of the class.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaInstanceVariable -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaInstanceVariable">
        <rdfs:label>Java instance variable</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaField"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;isStatic"/>
                <owl:hasValue rdf:datatype="&xsd;boolean">false</owl:hasValue>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>They are associated with objects and is needed creating an instance of the class.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaIntegralType -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaIntegralType">
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaNumericType"/>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaInterface -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaInterface">
        <rdfs:label>Java interface</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaReferenceType"/>
        <rdfs:subClassOf rdf:resource="&msw;Interface"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;visibility"/>
                <owl:someValuesFrom rdf:resource="http://www.markosproject.eu/ontologies/java#JavaTopLevelModifier"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:seeAlso>http://en.wikipedia.org/wiki/Interface_(Java)</rdfs:seeAlso>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/IandI/createinterface.html</rdfs:seeAlso>
        <rdfs:comment>An interface in the Java programming language is an abstract type that is used to specify an interface (in the generic sense of the term) that classes must implement. Interfaces are declared using the interface keyword, and may only contain method signature and constant declarations (variable declarations that are declared to be both static and final). An interface may never contain method definitions.

Interfaces cannot be instantiated, but rather are implemented

A Java class may implement, and an interface may extend, any number of interfaces; however an interface may not implement an interface.</rdfs:comment>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/concepts/interface.html</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaLibrary -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaLibrary">
        <rdfs:label>Java library</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;Library"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;implementationLanguage"/>
                <owl:hasValue rdf:resource="&msw;JAVA"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>A library is a software entity, manifested by a single JavaArchiveFile, that aggregates JAVA software entities manifested the files contained in the JavaArchiveFile.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaLocalClass -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaLocalClass">
        <rdfs:label>Java local class</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaSoftwareClass"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;visibility"/>
                <owl:someValuesFrom rdf:resource="http://www.markosproject.eu/ontologies/java#JavaTopLevelModifier"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;isStatic"/>
                <owl:hasValue rdf:datatype="&xsd;boolean">false</owl:hasValue>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/javaOO/localclasses.html</rdfs:seeAlso>
        <rdfs:comment>Local classes are classes that are defined in a block, which is a group of zero or more statements between balanced braces. You typically find local classes defined in the body of a method.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaLocalVariable -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaLocalVariable">
        <rdfs:label>Java local variable</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;LocalVariable"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;valueType"/>
                <owl:someValuesFrom rdf:resource="http://www.markosproject.eu/ontologies/java#JavaType"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/javaOO/variables.html</rdfs:seeAlso>
        <rdfs:comment>Similar to how an object stores its state in fields, a method will often store its temporary state in local variables</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaManifestMFFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaManifestMFFile">
        <rdfs:label>Manifest file</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaConfigurationFile"/>
        <rdfs:comment>JAR files support a wide range of functionality, including electronic signing, version control, package sealing, and others. What gives a JAR file this versatility? The answer is the JAR file&apos;s manifest.

The manifest is a special file that can contain information about the files packaged in a JAR file. By tailoring this &quot;meta&quot; information that the manifest contains, you enable the JAR file to serve a variety of purposes.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaMember -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaMember">
        <rdfs:label>Java member</rdfs:label>
        <rdfs:subClassOf rdf:resource="&mtop;Entity"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;visibility"/>
                <owl:someValuesFrom rdf:resource="&msw;VisibilityKind"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>A field or method of a class. It is an abstrac class.</rdfs:comment>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/information/glossary.html (member)</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaMetaAnnotationType -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaMetaAnnotationType">
        <rdfs:label>Java meta annotation type</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaAnnotationType"/>
        <relatedTo>Java Annotation</relatedTo>
        <rdfs:comment>Annotations that apply to other annotations are called meta-annotations. </rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaMethod -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaMethod">
        <rdfs:label>Java method</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaMember"/>
        <rdfs:subClassOf rdf:resource="&msw;Method"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;implementationLanguage"/>
                <owl:hasValue rdf:resource="&msw;JAVA"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&mtop;nestedClassifier"/>
                <owl:someValuesFrom rdf:resource="http://www.markosproject.eu/ontologies/java#JavaLocalClass"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>AbstracMethod, FinalMethod in principle are not consdered as a subclasses due to exists a especific properties to model the distintion</rdfs:comment>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/javaOO/methods.html</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaNativeInterface -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaNativeInterface">
        <rdfs:label>Java native interface</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaInterface"/>
        <rdfs:comment>Java native methods are to handle those situations when an application cannot be written entirely in Java.</rdfs:comment>
        <rdfs:seeAlso>http://docs.oracle.com/javase/7/docs/technotes/guides/jni/</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaNativeMethod -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaNativeMethod">
        <rdfs:label>Java native method</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaMethod"/>
        <rdfs:comment>Native methods are implemented in another programming language such as C
When you write a method in a programming language other than Java, you must include the keyword native as part of the method&apos;s definition within the Java class. The native keyword signals to the Java compiler that the function is a native language function.
</rdfs:comment>
        <rdfs:seeAlso>http://docs.oracle.com/javase/7/docs/technotes/guides/jni/</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaNestedClass -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaNestedClass">
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaSoftwareClass"/>
        <rdfs:comment>Java nested class</rdfs:comment>
        <rdfs:comment>The Java programming language allows you to define a class within another class. Such a class is called a nested class</rdfs:comment>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/javaOO/nested.html</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaNonAbstracMethod -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaNonAbstracMethod">
        <rdfs:label>Java non abstract method</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaMethod"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;isAbstract"/>
                <owl:hasValue rdf:datatype="&xsd;boolean">false</owl:hasValue>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>The signature of a method</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaNumericType -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaNumericType">
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPrimitiveType"/>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaObjectFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaObjectFile">
        <rdfs:label>Java object file</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;ObjectFile"/>
        <rdfs:comment>An object file format is a computer file format used for the storage of java object code and related data.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaPackage -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaPackage">
        <rdfs:label>Java package</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;Package"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&mtop;ownedMember"/>
                <owl:someValuesFrom>
                    <owl:Class>
                        <owl:unionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaInterface"/>
                            <rdf:Description rdf:about="http://www.markosproject.eu/ontologies/java#JavaSoftwareClass"/>
                        </owl:unionOf>
                    </owl:Class>
                </owl:someValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;implementationLanguage"/>
                <owl:hasValue rdf:resource="&msw;JAVA"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>The set of all Java software entities contained in a same JavaSoftwareRelease and belonging to a same namespace. </rdfs:comment>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/package/packages.html</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaParameter -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaParameter">
        <rdfs:label>Java parameter</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;Parameter"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;valueType"/>
                <owl:someValuesFrom rdf:resource="http://www.markosproject.eu/ontologies/java#JavaType"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;implementationLanguage"/>
                <owl:hasValue rdf:resource="&msw;JAVA"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>The variable to pass information to one Java method/operation</rdfs:comment>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/javaOO/variables.html</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaParameterizedType -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaParameterizedType">
        <rdfs:label>Java parameterized type</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaType"/>
        <rdfs:comment>A parameterized type is the invocation of a generic type. It is generic type customized with type arguments.

The type can be any non-primitive type you specify: any class type, any interface type, any array type, or even another type variable.</rdfs:comment>
        <relatedTo>Java Generic</relatedTo>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/generics/types.html</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaPersistenceXMLFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaPersistenceXMLFile">
        <rdfs:label>Persistence XML file</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaConfigurationFile"/>
        <rdfs:comment>The persistence.xml file is a standard configuration file in JPA. it has to be included in the META-INF directory inside the JAR file that contains the entity beans. The persistence.xml file must define a persistence-unit with a unique name in the current scoped classloader. The provider attribute specifies the underlying implementation of the JPA EntityManager. One persistence.xml file can include definitions for one or more persistence units.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaPrimitiveType -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaPrimitiveType">
        <rdfs:label>Java primitive type</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaType"/>
        <rdfs:subClassOf rdf:resource="&msw;PrimitiveType"/>
        <rdfs:seeAlso>http://docs.oracle.com/javase/specs/jls/se7/html/jls-4.html#jls-4.2</rdfs:seeAlso>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html</rdfs:seeAlso>
        <rdfs:comment>A primitive type is predefined by the language and is named by a reserved keyword. Primitive values do not share state with other primitive values. Java programming language support eight primitive data types</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaProgram -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaProgram">
        <rdfs:label>Java program</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;Program"/>
        <rdfs:comment>Java program code consists of instructions which will be executed on your computer system to perform a task as an example say arrange given integers in ascending order</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaProgrammingLanguageVersion -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaProgrammingLanguageVersion">
        <rdfs:label>Java version</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;ProgrammingLanguageVersion"/>
        <rdfs:seeAlso>http://en.wikipedia.org/wiki/Java_(programming_language)</rdfs:seeAlso>
        <rdfs:comment>Major release versions of Java</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaPropertiesFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaPropertiesFile">
        <rdfs:label>Properties file</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaConfigurationFile"/>
        <rdfs:comment>.properties is a file extension for files mainly used in Java related technologies to store the configurable parameters of an application. They can also be used for storing strings for Internationalization and localization; these are known as Property Resource Bundles</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaReferenceType -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaReferenceType">
        <rdfs:label>Java reference type</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaType"/>
        <rdfs:seeAlso>http://docs.oracle.com/javase/specs/jls/se7/html/jls-4.html#jls-4.3</rdfs:seeAlso>
        <rdfs:seeAlso>http://i2.wp.com/java9s.com/wp-content/uploads/2012/06/Primitive-data-types-in-java.gif</rdfs:seeAlso>
        <rdfs:comment>A reference type is a data type thatâ€™s based on a class rather than on one of the primitive types that are built in to the Java language. The class can be a class thatâ€™s provided as part of the Java API class library or a class that a programamer can write himself.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaRuntimeException -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaRuntimeException">
        <rdfs:label>Java runtime exception</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaUncheckedException"/>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaSETechnology -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaSETechnology">
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaTechnology"/>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaSQLException -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaSQLException">
        <rdfs:label>Java SQL exception</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaCheckedException"/>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaSoftwareClass -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaSoftwareClass">
        <rdfs:label>Java class</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaReferenceType"/>
        <rdfs:subClassOf rdf:resource="&msw;SoftwareClass"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&mtop;nestedClassifier"/>
                <owl:someValuesFrom rdf:resource="http://www.markosproject.eu/ontologies/java#JavaNestedClass"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/javaOO/classes.html</rdfs:seeAlso>
        <rdfs:comment>A Java class can be defined as a template/ blue print that describe the behaviors/states that java object of its type support

A Java class is a tyoe of Software Class whose features are fields and methods (An entity is some unit of data that can be classified and have stated relationships to other entities)</rdfs:comment>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/concepts/class.html</rdfs:seeAlso>
        <rdfs:comment>AbstracClass, FinalClass, SuperClass and SubClass in principle are not consdered as a subclasses due to exists a especific properties to model the distintion</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaSourceFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaSourceFile">
        <rdfs:label>Java source file</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;SourceFile"/>
        <rdfs:comment>A Java source code file is a file contain instructions (possibly with comments) written Java programing language</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaStatement -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaStatement">
        <rdfs:label>Java statement</rdfs:label>
        <rdfs:subClassOf rdf:resource="&mtop;Entity"/>
        <rdfs:comment>Represents the smallest standalone element of a Java program</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaStaticNestedClass -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaStaticNestedClass">
        <rdfs:label>Nested Class</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaNestedClass"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;visibility"/>
                <owl:someValuesFrom rdf:resource="&msw;VisibilityKind"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;isStatic"/>
                <owl:hasValue rdf:datatype="&xsd;boolean">true</owl:hasValue>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>Nested classes that are declared static. A static nested class is associated with its outer class. And like static class methods, a static nested class cannot refer directly to instance variables or methods defined in its enclosing class: it can use them only through an object reference.</rdfs:comment>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/javaOO/nested.html</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaSubClass -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaSubClass">
        <rdfs:label>Java subclass</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaSoftwareClass"/>
        <rdfs:comment>A class that inherits the functionality of the class it extends</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaSuperClass -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaSuperClass">
        <rdfs:label>Java superclass</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaSoftwareClass"/>
        <rdfs:comment>The class from which its derived the subclasses</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaTechnology -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaTechnology">
        <rdfs:label>Java technology</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#SoftwareDevelopmentTechnology"/>
        <rdfs:comment>Technologies used to build Java programs.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaTieredApplication -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaTieredApplication">
        <rdfs:label>Java tiered application</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaProgram"/>
        <rdfs:comment>In a multi-tiered application, the functionality of the application is separated into isolated functional areas, called tiers. Typically, multi-tiered applications have a client tier, a middle tier, and a data tier (often called the enterprise information systems tier). The client tier consists of a client program that makes requests to the middle tier. The middle tier&apos;s business functions handle client requests and process application data, storing it in a permanent datastore in the data tier.</rdfs:comment>
        <rdfs:seeAlso>http://docs.oracle.com/javaee/6/firstcup/doc/gcrky.html#gcrkr</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaTopLevelModifier -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaTopLevelModifier">
        <rdfs:label>Java top level modifier</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaAccessModifier"/>
        <rdfs:comment>At the top level</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaType -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaType">
        <rdfs:label>Java type</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;Type"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&msw;implementationLanguage"/>
                <owl:hasValue rdf:resource="&msw;JAVA"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:seeAlso>http://docs.oracle.com/javase/specs/jls/se7/html/jls-4.html</rdfs:seeAlso>
        <rdfs:comment>A Java type determines the types of values of the Java variables.

All variables must have a type. You can use primitive types such as int, float, boolean, etc. Or you can use reference types, such as strings, arrays, or objects.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaTypeParameter -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaTypeParameter">
        <rdfs:label>Java type parameter</rdfs:label>
        <rdfs:subClassOf rdf:resource="&msw;SoftwareEntity"/>
        <rdfs:comment>Type parameter (also called type variables), are variables to be used in a generic type declaration (the declaration of a generic class or generic interface). 

It is not considered a Typed Entity because in the delcarion does not have a concrete type

By convention, type parameter names are single, uppercase letters. </rdfs:comment>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/generics/types.html</rdfs:seeAlso>
        <relatedTo>Java Generic</relatedTo>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JavaUncheckedException -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JavaUncheckedException">
        <rdfs:label>Java unchecked exception</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaExceptionType"/>
        <rdfs:comment>Unchecked runtime exceptions represent conditions that, generally speaking, reflect errors in your program&apos;s logic and cannot be reasonably recovered from at run time</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#JspFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#JspFile">
        <rdfs:label>Jsp file</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaSourceFile"/>
        <rdfs:seeAlso>http://en.wikipedia.org/wiki/JavaServer_Pages</rdfs:seeAlso>
        <rdfs:comment>JSP is a file extension for Java Server Pages file format.  A JSP is an HTML page containing a reference to Java servlets, or,  java server side applets. In orther words, html with java code.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#LambdaExpresion -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#LambdaExpresion">
        <rdfs:label>Java lambda expresion</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaExpresion"/>
        <rdfs:comment>Lambda expressions enable to treat functionality as method argument, or code as data. In the cases, you&apos;re  trying to pass functionality as an argument to another method.

They are usually used to define the funcionality to interface that contains only one anstrac method.</rdfs:comment>
        <rdfs:seeAlso>http://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#SoftwareDevelopmentKit -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#SoftwareDevelopmentKit">
        <rdfs:label>Software development kit</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaDevelopmentTool"/>
        <rdfs:comment>A software development kit (SDK or &quot;devkit&quot;) is typically a set of software development tools that allows for the creation of applications for a certain software package, software framework, hardware platform, computer system, video game console, operating system, or similar development platform.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#SoftwareDevelopmentTechnology -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#SoftwareDevelopmentTechnology">
        <rdfs:label>Software development technology</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#InformationTechnology"/>
        <rdfs:comment>Technologies used for developing software, understood as the development and implementation of applications either from scratch or as a heavy customisation of an existing solution.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#Stand-AloneApplication -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#Stand-AloneApplication">
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaProgram"/>
        <rdfs:comment>Computer software that can work offline, i.e. does not necessarily require network connection to function</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#Technology -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#Technology">
        <rdfs:subClassOf rdf:resource="&mtop;Entity"/>
        <rdfs:comment>By technology we mean engineered applications of science.Technology is the making, modification, usage, and knowledge of tools, machines, techniques, crafts, systems, and methods of organization, in order to solve a problem, improve a pre-existing solution to a problem, achieve a goal, handle an applied input/output relation or perform a specific function. It can also refer to the collection of such tools.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#WARArchiveFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#WARArchiveFile">
        <rdfs:label>WAR file</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JARArchiveFile"/>
        <rdfs:comment>a WAR file is a JAR file used to distribute a collection of Java files and other resources that together constitute a Web application</rdfs:comment>
        <rdfs:seeAlso>http://en.wikipedia.org/wiki/WAR_file_format_(Sun)</rdfs:seeAlso>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#WEBApplication -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#WEBApplication">
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaProgram"/>
        <rdfs:comment>Web application</rdfs:comment>
        <rdfs:comment>A web application or web app is any application software that runs in a web browser or is created in a browser-supported programming language (such as the combination of JavaScript, HTML and CSS) and relies on a common web browser to render the application</rdfs:comment>
        <rdfs:comment>Web Java EE Technologies: Applet</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#WebXMLSourceCodeFile -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#WebXMLSourceCodeFile">
        <rdfs:label>Web XML descriptor file</rdfs:label>
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaDeploymentDescriptorFile"/>
        <rdfs:comment>For web applications, the deployment descriptor must be called web.xml and must reside in the WEB-INF directory in the web application roo</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/java#XMLBinding -->

    <owl:Class rdf:about="http://www.markosproject.eu/ontologies/java#XMLBinding">
        <rdfs:subClassOf rdf:resource="http://www.markosproject.eu/ontologies/java#JavaSETechnology"/>
    </owl:Class>
    


    <!-- http://www.markosproject.eu/ontologies/software#Attribute -->

    <owl:Class rdf:about="&msw;Attribute"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#ExceptionType -->

    <owl:Class rdf:about="&msw;ExceptionType"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#Interface -->

    <owl:Class rdf:about="&msw;Interface"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#Method -->

    <owl:Class rdf:about="&msw;Method"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#ObjectCodeFile -->

    <owl:Class rdf:about="&msw;ObjectCodeFile"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#SoftwareClass -->

    <owl:Class rdf:about="&msw;SoftwareClass"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#SourceCodeFile -->

    <owl:Class rdf:about="&msw;SourceCodeFile"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#Type -->

    <rdf:Description rdf:about="&msw;Type">
        <rdfs:comment>it doesn&apos;t make sense to model values (or objects) themselves. We need just the types of the possible values (in other words, classes of these objects)</rdfs:comment>
    </rdf:Description>
    


    <!-- http://www.markosproject.eu/ontologies/software#VisibilityKind -->

    <owl:Class rdf:about="&msw;VisibilityKind"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Individuals
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_1.0 -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_1.0">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaProgrammingLanguageVersion"/>
        <rdfs:label>JDK 1.0</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_1.1 -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_1.1">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaProgrammingLanguageVersion"/>
        <rdfs:label>JDK 1.1</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_1.2 -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_1.2">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaProgrammingLanguageVersion"/>
        <rdfs:label>J2SE 1.2</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_1.3 -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_1.3">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaProgrammingLanguageVersion"/>
        <rdfs:label>J2SE 1.3</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_1.4 -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_1.4">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaProgrammingLanguageVersion"/>
        <rdfs:label>J2SE 1.4</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_5.0 -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_5.0">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaProgrammingLanguageVersion"/>
        <rdfs:label>J2SE 5.0</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_6 -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_6">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaProgrammingLanguageVersion"/>
        <rdfs:label>Java SE 6</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_7 -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_7">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaProgrammingLanguageVersion"/>
        <rdfs:label>Java SE 7</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_@DEPRECATED -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_@DEPRECATED">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaAnnotationType"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_@DOCUMENTED -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_@DOCUMENTED">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaMetaAnnotationType"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_@FUNCTIONALINTERFACE -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_@FUNCTIONALINTERFACE">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaAnnotationType"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_@INHERITED -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_@INHERITED">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaMetaAnnotationType"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_@OVERRIDE -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_@OVERRIDE">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaAnnotationType"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_@REPETEABLE -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_@REPETEABLE">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaMetaAnnotationType"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_@RETENTION -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_@RETENTION">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaMetaAnnotationType"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_@SAFEVARARGS -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_@SAFEVARARGS">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaAnnotationType"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_@SUPPRESSWARNING -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_@SUPPRESSWARNING">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaAnnotationType"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_@TARGET -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_@TARGET">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaMetaAnnotationType"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_APACHEANT -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_APACHEANT">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#BuildAutomationTool"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_APACHEBUILDR -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_APACHEBUILDR">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#BuildAutomationTool"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_APACHEMAVEN -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_APACHEMAVEN">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#BuildAutomationTool"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_ARRAY -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_ARRAY">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaSoftwareClass"/>
        <rdfs:label>Array class</rdfs:label>
        <isCore rdf:datatype="&xsd;boolean">true</isCore>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_BLUEJ -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_BLUEJ">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#IDETool"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_BOOLEAN -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_BOOLEAN">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPrimitiveType"/>
        <rdfs:label>boolean</rdfs:label>
        <rdfs:comment>The boolean data type has only two possible values: true and false. Use this data type for simple flags that track true/false conditions. This data type represents one bit of information, but its &quot;size&quot; isn&apos;t something that&apos;s precisely defined.</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_BUNDLEACTIVATOR -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_BUNDLEACTIVATOR">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaInterface"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_BYTE -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_BYTE">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaIntegralType"/>
        <rdfs:label>byte</rdfs:label>
        <rdfs:comment>The byte data type is an 8-bit signed two&apos;s complement integer. It has a minimum value of -128 and a maximum value of 127 (inclusive). The byte data type can be useful for saving memory in large arrays, where the memory savings actually matters. They can also be used in place of int where their limits help to clarify your code; the fact that a variable&apos;s range is limited can serve as a form of documentation</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_CHART -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_CHART">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaIntegralType"/>
        <rdfs:label>char</rdfs:label>
        <rdfs:comment>The char data type is a single 16-bit Unicode character. It has a minimum value of &apos;\u0000&apos; (or 0) and a maximum value of &apos;\uffff&apos; (or 65,535 inclusive).</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_CODENVY -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_CODENVY">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#IDETool"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_COM.GOOGLE.GWT -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_COM.GOOGLE.GWT">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPackage"/>
        <isCore rdf:datatype="&xsd;boolean">true</isCore>
        <mtop:ownedMember rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA_ENTRYPOINT"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_DATABASE_CONNECTIVITY -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_DATABASE_CONNECTIVITY">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaAPI"/>
        <isCore rdf:datatype="&xsd;boolean">true</isCore>
        <msw:version>7</msw:version>
        <preferredName>JDBC</preferredName>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_DOUBLE -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_DOUBLE">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaFloatingPointType"/>
        <rdfs:label>double</rdfs:label>
        <rdfs:comment>The double data type is a double-precision 64-bit IEEE 754 floating point. Its range of values is beyond the scope of this discussion, but is specified in the Floating-Point Types, Formats, and Values section of the Java Language Specification. For decimal values, this data type is generally the default choice. As mentioned above, this data type should never be used for precise values, such as currency</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_DRJAVA -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_DRJAVA">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#IDETool"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_ECLIPSE -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_ECLIPSE"/>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_ECLIPSEJDTIBM -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_ECLIPSEJDTIBM">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#IDETool"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_ENTRYPOINT -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_ENTRYPOINT">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaInterface"/>
        <isCore rdf:datatype="&xsd;boolean">true</isCore>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_FLOAT -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_FLOAT">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaFloatingPointType"/>
        <rdfs:label>float</rdfs:label>
        <rdfs:comment>The float data type is a single-precision 32-bit IEEE 754 floating point. Its range of values is beyond the scope of this discussion, but is specified in the Floating-Point Types, Formats, and Values section of the Java Language Specification. As with the recommendations for byte and short, use a float (instead of double) if you need to save memory in large arrays of floating point numbers. This data type should never be used for precise values, such as currency. For that, you will need to use the java.math.BigDecimal class instead. Numbers and Strings covers BigDecimal and other useful classes provided by the Java platform.</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_GRADLE -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_GRADLE">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#BuildAutomationTool"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_HUDSON -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_HUDSON">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#ContinuousIntegrationTool"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_INTEGER -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_INTEGER">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaIntegralType"/>
        <rdfs:label>int</rdfs:label>
        <rdfs:comment>The int data type is a 32-bit signed two&apos;s complement integer. It has a minimum value of -2,147,483,648 and a maximum value of 2,147,483,647 (inclusive). For integral values, this data type is generally the default choice unless there is a reason (like the above) to choose something else. This data type will most likely be large enough for the numbers your program will use, but if you need a wider range of values, use long instead.</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_INTELLIJIDEA -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_INTELLIJIDEA">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#IDETool"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_JAVA.APPLET -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_JAVA.APPLET">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPackage"/>
        <isCore rdf:datatype="&xsd;boolean">true</isCore>
        <msw:version>7</msw:version>
        <rdfs:comment>Provides the classes necessary to create an applet and the classes an applet uses to communicate with its applet context.</rdfs:comment>
        <msw:includedAPI rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA_PLATFORM_STANDAR_EDITION_7"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_JAVA.AWT -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_JAVA.AWT">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPackage"/>
        <isCore rdf:datatype="&xsd;boolean">true</isCore>
        <rdfs:comment>Contains all of the classes for creating user interfaces and for painting graphics and images.</rdfs:comment>
        <msw:version>7</msw:version>
        <msw:includedAPI rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA_PLATFORM_STANDAR_EDITION_7"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_JAVA.LANG -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_JAVA.LANG">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPackage"/>
        <isCore rdf:datatype="&xsd;boolean">true</isCore>
        <msw:version>7</msw:version>
        <msw:includedAPI rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA_PLATFORM_STANDAR_EDITION_7"/>
        <mtop:ownedMember rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA_STRING"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_JAVA.SQL -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_JAVA.SQL">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPackage"/>
        <isCore rdf:datatype="&xsd;boolean">true</isCore>
        <rdfs:comment>Provides the API for accessing and processing data stored in a data source (usually a relational database) using the JavaTM programming language.</rdfs:comment>
        <msw:version>7</msw:version>
        <msw:includedAPI rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA_PLATFORM_STANDAR_EDITION_7"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_JAVA.UTIL -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_JAVA.UTIL">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPackage"/>
        <isCore rdf:datatype="&xsd;boolean">true</isCore>
        <msw:version>7</msw:version>
        <mtop:ownedMember rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA_ARRAY"/>
        <msw:includedAPI rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA_PLATFORM_STANDAR_EDITION_7"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_JAVAEEDEVELOPMENTKIT_7 -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_JAVAEEDEVELOPMENTKIT_7">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#SoftwareDevelopmentKit"/>
        <rdfs:label>SDK</rdfs:label>
        <msw:version rdf:datatype="&xsd;string">7</msw:version>
        <rdfs:comment>A free integrated development kit used to build, test, and deploy Java EE 7 applications</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_JAVASEDEVELOPMENTKIT_7 -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_JAVASEDEVELOPMENTKIT_7">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#SoftwareDevelopmentKit"/>
        <rdfs:label>Java SE development kit</rdfs:label>
        <rdfs:label>JDK</rdfs:label>
        <msw:version rdf:datatype="&xsd;string">7</msw:version>
        <rdfs:comment>The JDK is a development environment for building applications, applets, and components using the Java programming language. The JDK includes tools useful for developing and testing programs written in the Java programming language and running on the Java platform.</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_JAVAX.EJB -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_JAVAX.EJB">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPackage"/>
        <isCore rdf:datatype="&xsd;boolean">true</isCore>
        <msw:version>7</msw:version>
        <msw:includedAPI rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA_PLATFORM_ENTERPRISE_EDITION_7"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_JAVAX.SERVLET -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_JAVAX.SERVLET">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPackage"/>
        <isCore rdf:datatype="&xsd;boolean">true</isCore>
        <msw:version>7</msw:version>
        <msw:includedAPI rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA_PLATFORM_ENTERPRISE_EDITION_7"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_JAVAX.SQL -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_JAVAX.SQL">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPackage"/>
        <isCore rdf:datatype="&xsd;boolean">true</isCore>
        <rdfs:comment>Provides the API for server side data source access and processing from the JavaTM programming language.</rdfs:comment>
        <msw:version>7</msw:version>
        <msw:includedAPI rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA_PLATFORM_STANDAR_EDITION_7"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_JAVAX.SWING -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_JAVAX.SWING">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPackage"/>
        <isCore rdf:datatype="&xsd;boolean">true</isCore>
        <msw:version>7</msw:version>
        <rdfs:comment>Provides a set of &quot;lightweight&quot; (all-Java language) components that, to the maximum degree possible, work the same on all platforms.</rdfs:comment>
        <msw:includedAPI rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA_PLATFORM_STANDAR_EDITION_7"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_JAVA_DATABASE_CONNECTIVITY_LIBRARY -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_JAVA_DATABASE_CONNECTIVITY_LIBRARY">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaLibrary"/>
        <isCore rdf:datatype="&xsd;boolean">true</isCore>
        <msw:implementedAPI rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA_DATABASE_CONNECTIVITY"/>
        <msw:provenanceManifestation rdf:resource="http://www.markosproject.eu/ontologies/java#JDBC.JAR"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_JAXB -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_JAXB">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#XMLBinding"/>
        <rdfs:label>Java Architecture for XML Binding</rdfs:label>
        <rdfs:comment>Java Architecture for XML Binding (JAXB) allows Java developers to map Java classes to XML representations. JAXB provides two main features: the ability to marshal Java objects into XML and the inverse, i.e. to unmarshal XML back into Java objects. In other words, JAXB allows storing and retrieving data in memory in any XML format, without the need to implement a specific set of XML loading and saving routines for the program&apos;s class structure.</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_JBUILDER -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_JBUILDER">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#IDETool"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_JCREATOR -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_JCREATOR">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#IDETool"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_JDEVELOPER -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_JDEVELOPER">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#IDETool"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_JGRASP -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_JGRASP">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#IDETool"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_JNDI -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_JNDI">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaAPI"/>
        <rdfs:label>Java naming and directory interface</rdfs:label>
        <rdfs:label>JNDI interface</rdfs:label>
        <isCore rdf:datatype="&xsd;boolean">true</isCore>
        <rdfs:comment>The Java Naming and Directory Interface (JNDI) is a Java API for a directory service that allows Java software clients to discover and look up data and objects via a name. </rdfs:comment>
        <preferredName>JNDI</preferredName>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_LONG -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_LONG">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaIntegralType"/>
        <rdfs:label>long</rdfs:label>
        <rdfs:comment>The long data type is a 64-bit signed two&apos;s complement integer. It has a minimum value of -9,223,372,036,854,775,808 and a maximum value of 9,223,372,036,854,775,807 (inclusive). Use this data type when you need a range of values wider than those provided by int.</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_MAVEN -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_MAVEN"/>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_MYECLIPSE -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_MYECLIPSE">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#IDETool"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_NETBEANS -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_NETBEANS">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#IDETool"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_OPENJDK -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_OPENJDK">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#SoftwareDevelopmentKit"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_ORG.OGSI.FRAMEWORK -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_ORG.OGSI.FRAMEWORK">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaPackage"/>
        <msw:version>1.7</msw:version>
        <mtop:ownedMember rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA_BUNDLEACTIVATOR"/>
        <msw:includedAPI rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA_OSGi_CORE_RELEASE_5"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_ORG.OSGI.CORE_LIBRARY -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_ORG.OSGI.CORE_LIBRARY">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaLibrary"/>
        <msw:version>5.0.0</msw:version>
        <mtop:ownedMember rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA_ORG.OGSI.FRAMEWORK"/>
        <msw:implementedAPI rdf:resource="http://www.markosproject.eu/ontologies/java#JAVA_OSGi_CORE_RELEASE_5"/>
        <msw:provenanceManifestation rdf:resource="http://www.markosproject.eu/ontologies/java#ORG.OSGI.CORE-5.0.0.JAR"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_OSGi_CORE_RELEASE_5 -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_OSGi_CORE_RELEASE_5">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaAPI"/>
        <msw:version>5</msw:version>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_PLATFORM_ENTERPRISE_EDITION_7 -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_PLATFORM_ENTERPRISE_EDITION_7">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaAPI"/>
        <isCore rdf:datatype="&xsd;boolean">true</isCore>
        <preferredName>Java_EE</preferredName>
        <msw:version>7</msw:version>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_PLATFORM_STANDAR_EDITION_7 -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_PLATFORM_STANDAR_EDITION_7">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaAPI"/>
        <isCore rdf:datatype="&xsd;boolean">true</isCore>
        <preferredName>Java_SE</preferredName>
        <msw:version>7</msw:version>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_RATIONALAPPLICATIONDEVELOPER -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_RATIONALAPPLICATIONDEVELOPER">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#IDETool"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_SERIALIZABLE -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_SERIALIZABLE">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaInterface"/>
        <rdfs:label>Interface serializable</rdfs:label>
        <isCore rdf:datatype="&xsd;boolean">true</isCore>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_SHORT -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_SHORT">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaIntegralType"/>
        <rdfs:label>short</rdfs:label>
        <rdfs:comment>The short data type is a 16-bit signed two&apos;s complement integer. It has a minimum value of -32,768 and a maximum value of 32,767 (inclusive). As with byte, the same guidelines apply: you can use a short to save memory in large arrays, in situations where the memory savings actually matters.</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JAVA_STRING -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JAVA_STRING">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaSoftwareClass"/>
        <rdfs:label>String class</rdfs:label>
        <isCore rdf:datatype="&xsd;boolean">true</isCore>
        <rdfs:comment>The String class represents character strings. All string literals in Java programs, such as &quot;abc&quot;, are implemented as instances of this class.</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#JDBC.JAR -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#JDBC.JAR">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JARArchiveFile"/>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/java#ORG.OSGI.CORE-5.0.0.JAR -->

    <owl:NamedIndividual rdf:about="http://www.markosproject.eu/ontologies/java#ORG.OSGI.CORE-5.0.0.JAR">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JARArchiveFile"/>
        <msw:version>5.0.0</msw:version>
    </owl:NamedIndividual>
    


    <!-- http://www.markosproject.eu/ontologies/software#JAVA -->

    <owl:NamedIndividual rdf:about="&msw;JAVA"/>
    


    <!-- http://www.markosproject.eu/ontologies/software#PACKAGE_VISIBILITY -->

    <rdf:Description rdf:about="&msw;PACKAGE_VISIBILITY">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaTopLevelModifier"/>
    </rdf:Description>
    


    <!-- http://www.markosproject.eu/ontologies/software#PUBLIC_VISIBILITY -->

    <rdf:Description rdf:about="&msw;PUBLIC_VISIBILITY">
        <rdf:type rdf:resource="http://www.markosproject.eu/ontologies/java#JavaTopLevelModifier"/>
    </rdf:Description>
</rdf:RDF>



<!-- Generated by the OWL API (version 3.4.2) http://owlapi.sourceforge.net -->

